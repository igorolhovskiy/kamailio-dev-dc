#!KAMAILIO

# define WITH_UAC
# define WITH_TCP

debug=2
log_stderror=no

memdbg=5
memlog=5

log_facility=LOG_LOCAL0
log_prefix="[$mt $hdr(CSeq) $ci] "

/* number of SIP routing processes for each UDP socket
 * - value inherited by tcp_children and sctp_children when not set explicitely */
children=4

/* uncomment the next line to disable TCP (default on) */

/* number of SIP routing processes for all TCP/TLS sockets */
# tcp_children=8

/* uncomment the next line to disable the auto discovery of local aliases
 * based on reverse DNS on IPs (default on) */
# auto_aliases=no

/* add local domain aliases */
# alias="sip.mydomain.com"

/* uncomment and configure the following line if you want Kamailio to
 * bind on a specific interface/port/proto (default bind on all available) */
#!ifdef WITH_TCP
disable_tcp=no
listen=tcp:eth0:5060
tcp_connection_lifetime=3605
#!else
disable_tcp=yes
listen=udp:eth0:5060
#!endif
/* life time of TCP connection when there is no traffic
 * - a bit higher than registration expires to cope with UA behind NAT */

/* upper limit for TCP connections (it includes the TLS connections) */
# tcp_max_connections=2048


####### Custom Parameters #########

/* These parameters can be modified runtime via RPC interface
 * - see the documentation of 'cfg_rpc' module.
 *
 * Format: group.id = value 'desc' description
 * Access: $sel(cfg_get.group.id) or @cfg_get.group.id */

####### Modules Section ########

/* set paths to location of modules */
# mpath="/usr/lib/x86_64-linux-gnu/kamailio/modules/"

loadmodule "tm.so"
loadmodule "kex.so"
loadmodule "corex.so"
loadmodule "sl.so"
loadmodule "pv.so"
loadmodule "maxfwd.so"
loadmodule "usrloc.so"
loadmodule "textops.so"
loadmodule "siputils.so"
loadmodule "xlog.so"
loadmodule "ctl.so"
loadmodule "cfg_rpc.so"
loadmodule "counters.so"
loadmodule "rr.so"
#!ifdef WITH_UAC
loadmodule "uac.so"
#!endif


####### Routing Logic ########


/* Main SIP request routing logic
 * - processing of any incoming SIP request starts with this route
 * - note: this is the same as route { ... } */
request_route {

    xlog("[$TF] $rm received\n");

    if (is_method("REGISTER")) {
        sl_send_reply("200", "OK, Registered");

        route(REGISTER_PROCESS);
    }
}

route[REGISTER_PROCESS] {

    xlog("[$TF] INVITE is sent back..\n");

#!ifdef WITH_UAC

    $uac_req(method) = "INVITE";
    $uac_req(ruri) = $fu;
    $uac_req(furi) = "sip:dummy@" + $fd;
    $uac_req(turi) = $fu;
#!ifdef WITH_TCP
    $uac_req(ouri) = $fu + ";transport=tcp";
#!else
    $uac_req(ouri) = $fu;
#!endif
    $uac_req(callid) = $ci;
    $uac_req(evroute) = 1;

    xlog("[REGISTER_PROCESS] Sending back to $uac_req(ruri) via $uac_req(ouri)\n");

    uac_req_send();

#!else

    $var(invite_message) = "INVITE " + $fu + " SIP/2.0\r\n" +
#!ifdef WITH_TCP
                            "Via: SIP/2.0/TCP " + $td + ":5060;branch=z9hG4bKe_abcd\r\n" +
#!else
                            "Via: SIP/2.0/UDP " + $td + ":5060;branch=z9hG4bKe_abcd\r\n" +
#!endif
                            "Max-Forwards: 70\r\n" +
                            "From: <sip:dummy@" + $fd + ">;tag=abcd\r\n" +
                            "To: <" + $fu + ">\r\n" + 
                            "Call-ID: " + $ci + "\r\n" +
                            "CSeq: 10 INVITE\r\n" + 
                            "Contact: sip:dummy@" + $fd + "\r\n" + 
                            "Content-Length: 0\r\n";

    xlog("[REGISTER_PROCESS] Sending back to sip:$fd:5060 \n$var(invite_message)\n");
#!ifdef WITH_TCP
    send_data("$fu;transport=tcp", "$var(invite_message)");
#!else
    send_data("$fu", "$var(invite_message)");
#!endif
    drop;
#!endif
}


route[SEND_CANCEL] {

    xlog("[SEND_CANCEL]: ToTag - $tt\n");

    $var(invite_message) = "INVITE " + $fu + " SIP/2.0\r\n" +
#!ifdef WITH_TCP
                        "Via: SIP/2.0/TCP " + $td + ":5060;branch=z9hG4bKe_abcd\r\n" +
#!else
                        "Via: SIP/2.0/UDP " + $td + ":5060;branch=z9hG4bKe_abcd\r\n" +
#!endif
                        "Max-Forwards: 70\r\n" +
                        "From: <sip:dummy@" + $fd + ">;tag=abcd\r\n" +
                        "To: <" + $fu + ">\r\n" + 
                        "Call-ID: " + $ci + "\r\n" +
                        "CSeq: 10 INVITE\r\n" + 
                        "Contact: sip:dummy@" + $fd + "\r\n" + 
                        "Content-Length: 0\r\n";
}

reply_route {   
    xlog("[REPLY_ROUTE][$TF] $rs reply for $rm received\n");
#!ifndef WITH_UAC
    route(SEND_CANCEL);
#!endif
}

failure_route {
    xlog("[FAILURE_ROUTE][$TF] failure $rm received\n");
}